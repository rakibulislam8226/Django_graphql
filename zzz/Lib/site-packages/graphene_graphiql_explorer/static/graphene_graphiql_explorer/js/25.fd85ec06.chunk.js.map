{"version":3,"sources":["../node_modules/@graphiql/react/dist/lint.es3.js"],"names":["__webpack_require__","r","__webpack_exports__","d","lint$1","_mergeNamespaces2","_Users_creimers_projects_graphene_graphiql_explorer_graphene_graphiql_explorer_src_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_1__","__defProp","Object","defineProperty","__name","target","value","configurable","_mergeNamespaces","n","m","forEach","e","Array","isArray","keys","k","getOwnPropertyDescriptor","get","enumerable","freeze","lint$2","exports","CodeMirror","GUTTER_ID","LINT_LINE_ID","showTooltip","cm","content","tt","document","createElement","position","e2","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","poll","setInterval","nodeType","host","clearInterval","LintState","conf","hasGutter","prop","this","marked","Function","getAnnotations","linterOptions","defaults","hasOwnProperty","timeout","onMouseOver","waitingFor","highlightLines","tooltips","delay","lintOnChange","async","formatAnnotation","onUpdateLinting","clearMarks","clearGutter","clearErrorLines","i","length","clear","eachLine","line","has","wrapClass","exec","removeLineClass","makeMarker","labels","severity","multiple","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","id","abort","getValue","arg2","operation","updateLinting","startLinting","getHelper","Pos","then","issues","annotationsNotSorted","anns","filter","item","indexOf","maxSeverity","tipLabel","createDocumentFragment","to","markText","__annotation","setGutterMarker","addLineClass","onChange","clearTimeout","popupTooltips","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","gutters","getOption","hasLintGutter","defineExtension","mod","__proto__","Symbol","toStringTag"],"mappings":"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","file":"static/js/25.fd85ec06.chunk.js","sourcesContent":["import _defineProperty from \"/Users/creimers/projects/graphene-graphiql-explorer/graphene_graphiql_explorer/src/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _mergeNamespaces2;\n\nvar __defProp = Object.defineProperty;\n\nvar __name = function __name(target, value) {\n  return __defProp(target, \"name\", {\n    value: value,\n    configurable: true\n  });\n};\n\nimport { a as codemirror } from \"./codemirror.es.js\";\n\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function (e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function get() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n\n__name(_mergeNamespaces, \"_mergeNamespaces\");\n\nvar lint$2 = {\n  exports: {}\n};\n\n(function (module, exports) {\n  (function (mod) {\n    mod(codemirror.exports);\n  })(function (CodeMirror) {\n    var GUTTER_ID = \"CodeMirror-lint-markers\";\n    var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n    function showTooltip(cm, e, content) {\n      var tt = document.createElement(\"div\");\n      tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n      tt.appendChild(content.cloneNode(true));\n      if (cm.state.lint.options.selfContain) cm.getWrapperElement().appendChild(tt);else document.body.appendChild(tt);\n\n      function position(e2) {\n        if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n        tt.style.top = Math.max(0, e2.clientY - tt.offsetHeight - 5) + \"px\";\n        tt.style.left = e2.clientX + 5 + \"px\";\n      }\n\n      __name(position, \"position\");\n\n      CodeMirror.on(document, \"mousemove\", position);\n      position(e);\n      if (tt.style.opacity != null) tt.style.opacity = 1;\n      return tt;\n    }\n\n    __name(showTooltip, \"showTooltip\");\n\n    function rm(elt) {\n      if (elt.parentNode) elt.parentNode.removeChild(elt);\n    }\n\n    __name(rm, \"rm\");\n\n    function hideTooltip(tt) {\n      if (!tt.parentNode) return;\n      if (tt.style.opacity == null) rm(tt);\n      tt.style.opacity = 0;\n      setTimeout(function () {\n        rm(tt);\n      }, 600);\n    }\n\n    __name(hideTooltip, \"hideTooltip\");\n\n    function showTooltipFor(cm, e, content, node) {\n      var tooltip = showTooltip(cm, e, content);\n\n      function hide() {\n        CodeMirror.off(node, \"mouseout\", hide);\n\n        if (tooltip) {\n          hideTooltip(tooltip);\n          tooltip = null;\n        }\n      }\n\n      __name(hide, \"hide\");\n\n      var poll = setInterval(function () {\n        if (tooltip) for (var n = node;; n = n.parentNode) {\n          if (n && n.nodeType == 11) n = n.host;\n          if (n == document.body) return;\n\n          if (!n) {\n            hide();\n            break;\n          }\n        }\n        if (!tooltip) return clearInterval(poll);\n      }, 400);\n      CodeMirror.on(node, \"mouseout\", hide);\n    }\n\n    __name(showTooltipFor, \"showTooltipFor\");\n\n    function LintState(cm, conf, hasGutter) {\n      this.marked = [];\n      if (conf instanceof Function) conf = {\n        getAnnotations: conf\n      };\n      if (!conf || conf === true) conf = {};\n      this.options = {};\n      this.linterOptions = conf.options || {};\n\n      for (var prop in defaults) {\n        this.options[prop] = defaults[prop];\n      }\n\n      for (var prop in conf) {\n        if (defaults.hasOwnProperty(prop)) {\n          if (conf[prop] != null) this.options[prop] = conf[prop];\n        } else if (!conf.options) {\n          this.linterOptions[prop] = conf[prop];\n        }\n      }\n\n      this.timeout = null;\n      this.hasGutter = hasGutter;\n\n      this.onMouseOver = function (e) {\n        onMouseOver(cm, e);\n      };\n\n      this.waitingFor = 0;\n    }\n\n    __name(LintState, \"LintState\");\n\n    var defaults = {\n      highlightLines: false,\n      tooltips: true,\n      delay: 500,\n      lintOnChange: true,\n      getAnnotations: null,\n      async: false,\n      selfContain: null,\n      formatAnnotation: null,\n      onUpdateLinting: null\n    };\n\n    function clearMarks(cm) {\n      var state = cm.state.lint;\n      if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n      if (state.options.highlightLines) clearErrorLines(cm);\n\n      for (var i = 0; i < state.marked.length; ++i) {\n        state.marked[i].clear();\n      }\n\n      state.marked.length = 0;\n    }\n\n    __name(clearMarks, \"clearMarks\");\n\n    function clearErrorLines(cm) {\n      cm.eachLine(function (line) {\n        var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n        if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n      });\n    }\n\n    __name(clearErrorLines, \"clearErrorLines\");\n\n    function makeMarker(cm, labels, severity, multiple, tooltips) {\n      var marker = document.createElement(\"div\"),\n          inner = marker;\n      marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n\n      if (multiple) {\n        inner = marker.appendChild(document.createElement(\"div\"));\n        inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n      }\n\n      if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function (e) {\n        showTooltipFor(cm, e, labels, inner);\n      });\n      return marker;\n    }\n\n    __name(makeMarker, \"makeMarker\");\n\n    function getMaxSeverity(a, b) {\n      if (a == \"error\") return a;else return b;\n    }\n\n    __name(getMaxSeverity, \"getMaxSeverity\");\n\n    function groupByLine(annotations) {\n      var lines = [];\n\n      for (var i = 0; i < annotations.length; ++i) {\n        var ann = annotations[i],\n            line = ann.from.line;\n        (lines[line] || (lines[line] = [])).push(ann);\n      }\n\n      return lines;\n    }\n\n    __name(groupByLine, \"groupByLine\");\n\n    function annotationTooltip(ann) {\n      var severity = ann.severity;\n      if (!severity) severity = \"error\";\n      var tip = document.createElement(\"div\");\n      tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n\n      if (typeof ann.messageHTML != \"undefined\") {\n        tip.innerHTML = ann.messageHTML;\n      } else {\n        tip.appendChild(document.createTextNode(ann.message));\n      }\n\n      return tip;\n    }\n\n    __name(annotationTooltip, \"annotationTooltip\");\n\n    function lintAsync(cm, getAnnotations) {\n      var state = cm.state.lint;\n      var id = ++state.waitingFor;\n\n      function abort() {\n        id = -1;\n        cm.off(\"change\", abort);\n      }\n\n      __name(abort, \"abort\");\n\n      cm.on(\"change\", abort);\n      getAnnotations(cm.getValue(), function (annotations, arg2) {\n        cm.off(\"change\", abort);\n        if (state.waitingFor != id) return;\n        if (arg2 && annotations instanceof CodeMirror) annotations = arg2;\n        cm.operation(function () {\n          updateLinting(cm, annotations);\n        });\n      }, state.linterOptions, cm);\n    }\n\n    __name(lintAsync, \"lintAsync\");\n\n    function startLinting(cm) {\n      var state = cm.state.lint;\n      if (!state) return;\n      var options = state.options;\n      var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n      if (!getAnnotations) return;\n\n      if (options.async || getAnnotations.async) {\n        lintAsync(cm, getAnnotations);\n      } else {\n        var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n        if (!annotations) return;\n        if (annotations.then) annotations.then(function (issues) {\n          cm.operation(function () {\n            updateLinting(cm, issues);\n          });\n        });else cm.operation(function () {\n          updateLinting(cm, annotations);\n        });\n      }\n    }\n\n    __name(startLinting, \"startLinting\");\n\n    function updateLinting(cm, annotationsNotSorted) {\n      var state = cm.state.lint;\n      if (!state) return;\n      var options = state.options;\n      clearMarks(cm);\n      var annotations = groupByLine(annotationsNotSorted);\n\n      for (var line = 0; line < annotations.length; ++line) {\n        var anns = annotations[line];\n        if (!anns) continue;\n        var message = [];\n        anns = anns.filter(function (item) {\n          return message.indexOf(item.message) > -1 ? false : message.push(item.message);\n        });\n        var maxSeverity = null;\n        var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n        for (var i = 0; i < anns.length; ++i) {\n          var ann = anns[i];\n          var severity = ann.severity;\n          if (!severity) severity = \"error\";\n          maxSeverity = getMaxSeverity(maxSeverity, severity);\n          if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n          if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n          if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n            className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n            __annotation: ann\n          }));\n        }\n\n        if (state.hasGutter) cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1, options.tooltips));\n        if (options.highlightLines) cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n      }\n\n      if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n    }\n\n    __name(updateLinting, \"updateLinting\");\n\n    function onChange(cm) {\n      var state = cm.state.lint;\n      if (!state) return;\n      clearTimeout(state.timeout);\n      state.timeout = setTimeout(function () {\n        startLinting(cm);\n      }, state.options.delay);\n    }\n\n    __name(onChange, \"onChange\");\n\n    function popupTooltips(cm, annotations, e) {\n      var target = e.target || e.srcElement;\n      var tooltip = document.createDocumentFragment();\n\n      for (var i = 0; i < annotations.length; i++) {\n        var ann = annotations[i];\n        tooltip.appendChild(annotationTooltip(ann));\n      }\n\n      showTooltipFor(cm, e, tooltip, target);\n    }\n\n    __name(popupTooltips, \"popupTooltips\");\n\n    function onMouseOver(cm, e) {\n      var target = e.target || e.srcElement;\n      if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n      var box = target.getBoundingClientRect(),\n          x = (box.left + box.right) / 2,\n          y = (box.top + box.bottom) / 2;\n      var spans = cm.findMarksAt(cm.coordsChar({\n        left: x,\n        top: y\n      }, \"client\"));\n      var annotations = [];\n\n      for (var i = 0; i < spans.length; ++i) {\n        var ann = spans[i].__annotation;\n        if (ann) annotations.push(ann);\n      }\n\n      if (annotations.length) popupTooltips(cm, annotations, e);\n    }\n\n    __name(onMouseOver, \"onMouseOver\");\n\n    CodeMirror.defineOption(\"lint\", false, function (cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        clearMarks(cm);\n        if (cm.state.lint.options.lintOnChange !== false) cm.off(\"change\", onChange);\n        CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n        clearTimeout(cm.state.lint.timeout);\n        delete cm.state.lint;\n      }\n\n      if (val) {\n        var gutters = cm.getOption(\"gutters\"),\n            hasLintGutter = false;\n\n        for (var i = 0; i < gutters.length; ++i) {\n          if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n        }\n\n        var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n        if (state.options.lintOnChange) cm.on(\"change\", onChange);\n        if (state.options.tooltips != false && state.options.tooltips != \"gutter\") CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n        startLinting(cm);\n      }\n    });\n    CodeMirror.defineExtension(\"performLint\", function () {\n      startLinting(this);\n    });\n  });\n})();\n\nvar lint = lint$2.exports;\nvar lint$1 =\n/* @__PURE__ */\nObject.freeze(\n/* @__PURE__ */\n_mergeNamespaces((_mergeNamespaces2 = {\n  __proto__: null\n}, _defineProperty(_mergeNamespaces2, Symbol.toStringTag, \"Module\"), _defineProperty(_mergeNamespaces2, \"default\", lint), _mergeNamespaces2), [lint$2.exports]));\nexport { lint$1 as l };"],"sourceRoot":""}