{"version":3,"sources":["../node_modules/@graphiql/react/dist/closebrackets.es.js"],"names":["__webpack_require__","r","__webpack_exports__","d","closebrackets$1","_mergeNamespaces2","_Users_creimers_projects_graphene_graphiql_explorer_graphene_graphiql_explorer_src_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_1__","__defProp","Object","defineProperty","__name","target","value","configurable","_mergeNamespaces","n","m","forEach","e","Array","isArray","keys","k","getOwnPropertyDescriptor","get","enumerable","freeze","closebrackets$2","exports","CodeMirror","defaults","pairs","closeBefore","triples","explode","Pos","getOption","conf","name","defineOption","cm","val","old","Init","removeKeyMap","keyMap","state","closeBrackets","ensureBound","addKeyMap","Backspace","handleBackspace","Enter","handleEnter","chars","i","length","ch","charAt","key","handler","handleChar","getConfig","deflt","override","mode","getModeAt","getCursor","Pass","ranges","listSelections","empty","around","charsAround","head","indexOf","cur","replaceRange","line","operation","linesep","lineSeparator","replaceSelection","moveSel","i2","indentLine","dir","newRanges","primary","range","pos","push","anchor","setSelections","contractSelection","sel","inverted","cmpPos","type","identical","opening","curType","next","getRange","test","getTokenTypeAt","prev","isWordChar","stringStartsAfter","left","right","sels","getSelections","replaceSelections","slice","triggerElectric","str","token","getTokenAt","start","mod","closebrackets","__proto__","Symbol","toStringTag"],"mappings":"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","file":"static/js/21.d9450051.chunk.js","sourcesContent":["import _defineProperty from \"/Users/creimers/projects/graphene-graphiql-explorer/graphene_graphiql_explorer/src/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _mergeNamespaces2;\n\nvar __defProp = Object.defineProperty;\n\nvar __name = function __name(target, value) {\n  return __defProp(target, \"name\", {\n    value: value,\n    configurable: true\n  });\n};\n\nimport { a as codemirror } from \"./codemirror.es.js\";\n\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function (e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function get() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n\n__name(_mergeNamespaces, \"_mergeNamespaces\");\n\nvar closebrackets$2 = {\n  exports: {}\n};\n\n(function (module, exports) {\n  (function (mod) {\n    mod(codemirror.exports);\n  })(function (CodeMirror) {\n    var defaults = {\n      pairs: \"()[]{}''\\\"\\\"\",\n      closeBefore: \")]}'\\\":;>\",\n      triples: \"\",\n      explode: \"[]{}\"\n    };\n    var Pos = CodeMirror.Pos;\n    CodeMirror.defineOption(\"autoCloseBrackets\", false, function (cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        cm.removeKeyMap(keyMap);\n        cm.state.closeBrackets = null;\n      }\n\n      if (val) {\n        ensureBound(getOption(val, \"pairs\"));\n        cm.state.closeBrackets = val;\n        cm.addKeyMap(keyMap);\n      }\n    });\n\n    function getOption(conf, name) {\n      if (name == \"pairs\" && typeof conf == \"string\") return conf;\n      if (typeof conf == \"object\" && conf[name] != null) return conf[name];\n      return defaults[name];\n    }\n\n    __name(getOption, \"getOption\");\n\n    var keyMap = {\n      Backspace: handleBackspace,\n      Enter: handleEnter\n    };\n\n    function ensureBound(chars) {\n      for (var i = 0; i < chars.length; i++) {\n        var ch = chars.charAt(i),\n            key = \"'\" + ch + \"'\";\n        if (!keyMap[key]) keyMap[key] = handler(ch);\n      }\n    }\n\n    __name(ensureBound, \"ensureBound\");\n\n    ensureBound(defaults.pairs + \"`\");\n\n    function handler(ch) {\n      return function (cm) {\n        return handleChar(cm, ch);\n      };\n    }\n\n    __name(handler, \"handler\");\n\n    function getConfig(cm) {\n      var deflt = cm.state.closeBrackets;\n      if (!deflt || deflt.override) return deflt;\n      var mode = cm.getModeAt(cm.getCursor());\n      return mode.closeBrackets || deflt;\n    }\n\n    __name(getConfig, \"getConfig\");\n\n    function handleBackspace(cm) {\n      var conf = getConfig(cm);\n      if (!conf || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n      var pairs = getOption(conf, \"pairs\");\n      var ranges = cm.listSelections();\n\n      for (var i = 0; i < ranges.length; i++) {\n        if (!ranges[i].empty()) return CodeMirror.Pass;\n        var around = charsAround(cm, ranges[i].head);\n        if (!around || pairs.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n      }\n\n      for (var i = ranges.length - 1; i >= 0; i--) {\n        var cur = ranges[i].head;\n        cm.replaceRange(\"\", Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch + 1), \"+delete\");\n      }\n    }\n\n    __name(handleBackspace, \"handleBackspace\");\n\n    function handleEnter(cm) {\n      var conf = getConfig(cm);\n      var explode = conf && getOption(conf, \"explode\");\n      if (!explode || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n      var ranges = cm.listSelections();\n\n      for (var i = 0; i < ranges.length; i++) {\n        if (!ranges[i].empty()) return CodeMirror.Pass;\n        var around = charsAround(cm, ranges[i].head);\n        if (!around || explode.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n      }\n\n      cm.operation(function () {\n        var linesep = cm.lineSeparator() || \"\\n\";\n        cm.replaceSelection(linesep + linesep, null);\n        moveSel(cm, -1);\n        ranges = cm.listSelections();\n\n        for (var i2 = 0; i2 < ranges.length; i2++) {\n          var line = ranges[i2].head.line;\n          cm.indentLine(line, null, true);\n          cm.indentLine(line + 1, null, true);\n        }\n      });\n    }\n\n    __name(handleEnter, \"handleEnter\");\n\n    function moveSel(cm, dir) {\n      var newRanges = [],\n          ranges = cm.listSelections(),\n          primary = 0;\n\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.head == cm.getCursor()) primary = i;\n        var pos = range.head.ch || dir > 0 ? {\n          line: range.head.line,\n          ch: range.head.ch + dir\n        } : {\n          line: range.head.line - 1\n        };\n        newRanges.push({\n          anchor: pos,\n          head: pos\n        });\n      }\n\n      cm.setSelections(newRanges, primary);\n    }\n\n    __name(moveSel, \"moveSel\");\n\n    function contractSelection(sel) {\n      var inverted = CodeMirror.cmpPos(sel.anchor, sel.head) > 0;\n      return {\n        anchor: new Pos(sel.anchor.line, sel.anchor.ch + (inverted ? -1 : 1)),\n        head: new Pos(sel.head.line, sel.head.ch + (inverted ? 1 : -1))\n      };\n    }\n\n    __name(contractSelection, \"contractSelection\");\n\n    function handleChar(cm, ch) {\n      var conf = getConfig(cm);\n      if (!conf || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n      var pairs = getOption(conf, \"pairs\");\n      var pos = pairs.indexOf(ch);\n      if (pos == -1) return CodeMirror.Pass;\n      var closeBefore = getOption(conf, \"closeBefore\");\n      var triples = getOption(conf, \"triples\");\n      var identical = pairs.charAt(pos + 1) == ch;\n      var ranges = cm.listSelections();\n      var opening = pos % 2 == 0;\n      var type;\n\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i],\n            cur = range.head,\n            curType;\n        var next = cm.getRange(cur, Pos(cur.line, cur.ch + 1));\n\n        if (opening && !range.empty()) {\n          curType = \"surround\";\n        } else if ((identical || !opening) && next == ch) {\n          if (identical && stringStartsAfter(cm, cur)) curType = \"both\";else if (triples.indexOf(ch) >= 0 && cm.getRange(cur, Pos(cur.line, cur.ch + 3)) == ch + ch + ch) curType = \"skipThree\";else curType = \"skip\";\n        } else if (identical && cur.ch > 1 && triples.indexOf(ch) >= 0 && cm.getRange(Pos(cur.line, cur.ch - 2), cur) == ch + ch) {\n          if (cur.ch > 2 && /\\bstring/.test(cm.getTokenTypeAt(Pos(cur.line, cur.ch - 2)))) return CodeMirror.Pass;\n          curType = \"addFour\";\n        } else if (identical) {\n          var prev = cur.ch == 0 ? \" \" : cm.getRange(Pos(cur.line, cur.ch - 1), cur);\n          if (!CodeMirror.isWordChar(next) && prev != ch && !CodeMirror.isWordChar(prev)) curType = \"both\";else return CodeMirror.Pass;\n        } else if (opening && (next.length === 0 || /\\s/.test(next) || closeBefore.indexOf(next) > -1)) {\n          curType = \"both\";\n        } else {\n          return CodeMirror.Pass;\n        }\n\n        if (!type) type = curType;else if (type != curType) return CodeMirror.Pass;\n      }\n\n      var left = pos % 2 ? pairs.charAt(pos - 1) : ch;\n      var right = pos % 2 ? ch : pairs.charAt(pos + 1);\n      cm.operation(function () {\n        if (type == \"skip\") {\n          moveSel(cm, 1);\n        } else if (type == \"skipThree\") {\n          moveSel(cm, 3);\n        } else if (type == \"surround\") {\n          var sels = cm.getSelections();\n\n          for (var i2 = 0; i2 < sels.length; i2++) {\n            sels[i2] = left + sels[i2] + right;\n          }\n\n          cm.replaceSelections(sels, \"around\");\n          sels = cm.listSelections().slice();\n\n          for (var i2 = 0; i2 < sels.length; i2++) {\n            sels[i2] = contractSelection(sels[i2]);\n          }\n\n          cm.setSelections(sels);\n        } else if (type == \"both\") {\n          cm.replaceSelection(left + right, null);\n          cm.triggerElectric(left + right);\n          moveSel(cm, -1);\n        } else if (type == \"addFour\") {\n          cm.replaceSelection(left + left + left + left, \"before\");\n          moveSel(cm, 1);\n        }\n      });\n    }\n\n    __name(handleChar, \"handleChar\");\n\n    function charsAround(cm, pos) {\n      var str = cm.getRange(Pos(pos.line, pos.ch - 1), Pos(pos.line, pos.ch + 1));\n      return str.length == 2 ? str : null;\n    }\n\n    __name(charsAround, \"charsAround\");\n\n    function stringStartsAfter(cm, pos) {\n      var token = cm.getTokenAt(Pos(pos.line, pos.ch + 1));\n      return /\\bstring/.test(token.type) && token.start == pos.ch && (pos.ch == 0 || !/\\bstring/.test(cm.getTokenTypeAt(pos)));\n    }\n\n    __name(stringStartsAfter, \"stringStartsAfter\");\n  });\n})();\n\nvar closebrackets = closebrackets$2.exports;\nvar closebrackets$1 =\n/* @__PURE__ */\nObject.freeze(\n/* @__PURE__ */\n_mergeNamespaces((_mergeNamespaces2 = {\n  __proto__: null\n}, _defineProperty(_mergeNamespaces2, Symbol.toStringTag, \"Module\"), _defineProperty(_mergeNamespaces2, \"default\", closebrackets), _mergeNamespaces2), [closebrackets$2.exports]));\nexport { closebrackets$1 as c };"],"sourceRoot":""}