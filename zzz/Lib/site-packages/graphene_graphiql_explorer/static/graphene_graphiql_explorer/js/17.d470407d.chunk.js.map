{"version":3,"sources":["../node_modules/@graphiql/react/dist/hint.es2.js","../node_modules/@graphiql/react/dist/forEachState.es.js"],"names":["__webpack_require__","r","__webpack_exports__","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__","graphql__WEBPACK_IMPORTED_MODULE_1__","graphql__WEBPACK_IMPORTED_MODULE_2__","_forEachState_es_js__WEBPACK_IMPORTED_MODULE_3__","__defProp","Object","defineProperty","__name","target","value","configurable","hintList","cursor","token","list","hints","filterAndSortList","normalizeText","string","tokenStart","type","test","start","end","from","line","ch","to","text","filterNonEmpty","map","entry","proximity","getProximity","pair","isDeprecated","sort","a","b","length","array","predicate","filtered","filter","toLowerCase","replace","suggestion","lexicalDistance","indexOf","i","j","d","aLength","bLength","cost","Math","min","getVariablesHint","cur","options","state","kind","prevState","step","variableToType","typeInfo","getTypeInfo","keys","name","concat","fields","fieldName","field","description","namedInputType","getValues","tokenState","info","nullableType","ofType","objectType","getFields","objectField","registerHelper","editor","getCursor","getTokenAt","results","Pos","signal","forEachState","stack","fn","reverseStateStack","push"],"mappings":"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","file":"static/js/17.d470407d.chunk.js","sourcesContent":["var __defProp = Object.defineProperty;\n\nvar __name = function __name(target, value) {\n  return __defProp(target, \"name\", {\n    value: value,\n    configurable: true\n  });\n};\n\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { getNamedType, GraphQLInputObjectType, GraphQLEnumType, GraphQLBoolean, getNullableType, GraphQLList } from \"graphql\";\nimport { f as forEachState } from \"./forEachState.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\n\nfunction hintList(cursor, token, list) {\n  var hints = filterAndSortList(list, normalizeText(token.string));\n\n  if (!hints) {\n    return;\n  }\n\n  var tokenStart = token.type !== null && /\"|\\w/.test(token.string[0]) ? token.start : token.end;\n  return {\n    list: hints,\n    from: {\n      line: cursor.line,\n      ch: tokenStart\n    },\n    to: {\n      line: cursor.line,\n      ch: token.end\n    }\n  };\n}\n\n__name(hintList, \"hintList\");\n\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, function (entry) {\n      return !entry.isDeprecated;\n    });\n  }\n\n  var byProximity = list.map(function (entry) {\n    return {\n      proximity: getProximity(normalizeText(entry.text), text),\n      entry: entry\n    };\n  });\n  var conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, function (pair) {\n    return pair.proximity <= 2;\n  }), function (pair) {\n    return !pair.entry.isDeprecated;\n  });\n  var sortedMatches = conciseMatches.sort(function (a, b) {\n    return (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.text.length - b.entry.text.length;\n  });\n  return sortedMatches.map(function (pair) {\n    return pair.entry;\n  });\n}\n\n__name(filterAndSortList, \"filterAndSortList\");\n\nfunction filterNonEmpty(array, predicate) {\n  var filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n\n__name(filterNonEmpty, \"filterNonEmpty\");\n\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, \"\");\n}\n\n__name(normalizeText, \"normalizeText\");\n\nfunction getProximity(suggestion, text) {\n  var proximity = lexicalDistance(text, suggestion);\n\n  if (suggestion.length > text.length) {\n    proximity -= suggestion.length - text.length - 1;\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n\n  return proximity;\n}\n\n__name(getProximity, \"getProximity\");\n\nfunction lexicalDistance(a, b) {\n  var i;\n  var j;\n  var d = [];\n  var aLength = a.length;\n  var bLength = b.length;\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      var cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}\n\n__name(lexicalDistance, \"lexicalDistance\");\n\nCodeMirror.registerHelper(\"hint\", \"graphql-variables\", function (editor, options) {\n  var cur = editor.getCursor();\n  var token = editor.getTokenAt(cur);\n  var results = getVariablesHint(cur, token, options);\n\n  if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n    results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n    results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n    CodeMirror.signal(editor, \"hasCompletion\", editor, results, token);\n  }\n\n  return results;\n});\n\nfunction getVariablesHint(cur, token, options) {\n  var state = token.state.kind === \"Invalid\" ? token.state.prevState : token.state;\n  var kind = state.kind;\n  var step = state.step;\n\n  if (kind === \"Document\" && step === 0) {\n    return hintList(cur, token, [{\n      text: \"{\"\n    }]);\n  }\n\n  var variableToType = options.variableToType;\n\n  if (!variableToType) {\n    return;\n  }\n\n  var typeInfo = getTypeInfo(variableToType, token.state);\n\n  if (kind === \"Document\" || kind === \"Variable\" && step === 0) {\n    var variableNames = Object.keys(variableToType);\n    return hintList(cur, token, variableNames.map(function (name) {\n      return {\n        text: \"\\\"\".concat(name, \"\\\": \"),\n        type: variableToType[name]\n      };\n    }));\n  }\n\n  if (kind === \"ObjectValue\" || kind === \"ObjectField\" && step === 0) {\n    if (typeInfo.fields) {\n      var inputFields = Object.keys(typeInfo.fields).map(function (fieldName) {\n        return typeInfo.fields[fieldName];\n      });\n      return hintList(cur, token, inputFields.map(function (field) {\n        return {\n          text: \"\\\"\".concat(field.name, \"\\\": \"),\n          type: field.type,\n          description: field.description\n        };\n      }));\n    }\n  }\n\n  if (kind === \"StringValue\" || kind === \"NumberValue\" || kind === \"BooleanValue\" || kind === \"NullValue\" || kind === \"ListValue\" && step === 1 || kind === \"ObjectField\" && step === 2 || kind === \"Variable\" && step === 2) {\n    var namedInputType = typeInfo.type ? getNamedType(typeInfo.type) : void 0;\n\n    if (namedInputType instanceof GraphQLInputObjectType) {\n      return hintList(cur, token, [{\n        text: \"{\"\n      }]);\n    } else if (namedInputType instanceof GraphQLEnumType) {\n      var values = namedInputType.getValues();\n      return hintList(cur, token, values.map(function (value) {\n        return {\n          text: \"\\\"\".concat(value.name, \"\\\"\"),\n          type: namedInputType,\n          description: value.description\n        };\n      }));\n    } else if (namedInputType === GraphQLBoolean) {\n      return hintList(cur, token, [{\n        text: \"true\",\n        type: GraphQLBoolean,\n        description: \"Not false.\"\n      }, {\n        text: \"false\",\n        type: GraphQLBoolean,\n        description: \"Not true.\"\n      }]);\n    }\n  }\n}\n\n__name(getVariablesHint, \"getVariablesHint\");\n\nfunction getTypeInfo(variableToType, tokenState) {\n  var info = {\n    type: null,\n    fields: null\n  };\n  forEachState(tokenState, function (state) {\n    if (state.kind === \"Variable\") {\n      info.type = variableToType[state.name];\n    } else if (state.kind === \"ListValue\") {\n      var nullableType = info.type ? getNullableType(info.type) : void 0;\n      info.type = nullableType instanceof GraphQLList ? nullableType.ofType : null;\n    } else if (state.kind === \"ObjectValue\") {\n      var objectType = info.type ? getNamedType(info.type) : void 0;\n      info.fields = objectType instanceof GraphQLInputObjectType ? objectType.getFields() : null;\n    } else if (state.kind === \"ObjectField\") {\n      var objectField = state.name && info.fields ? info.fields[state.name] : null;\n      info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n    }\n  });\n  return info;\n}\n\n__name(getTypeInfo, \"getTypeInfo\");","var __defProp = Object.defineProperty;\n\nvar __name = function __name(target, value) {\n  return __defProp(target, \"name\", {\n    value: value,\n    configurable: true\n  });\n};\n\nfunction forEachState(stack, fn) {\n  var reverseStateStack = [];\n  var state = stack;\n\n  while (state === null || state === void 0 ? void 0 : state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n\n  for (var i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n\n__name(forEachState, \"forEachState\");\n\nexport { forEachState as f };"],"sourceRoot":""}