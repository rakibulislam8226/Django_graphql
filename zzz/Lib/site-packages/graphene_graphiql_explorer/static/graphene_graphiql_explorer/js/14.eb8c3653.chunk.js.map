{"version":3,"sources":["../node_modules/@graphiql/react/dist/lint.es.js","../node_modules/@graphiql/react/dist/onlineParser.es.js","../node_modules/@graphiql/react/dist/Range.es.js"],"names":["__webpack_require__","r","__webpack_exports__","_DIAGNOSTIC_SEVERITY","_Users_creimers_projects_graphene_graphiql_explorer_graphene_graphiql_explorer_src_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_codemirror_es_js__WEBPACK_IMPORTED_MODULE_1__","graphql__WEBPACK_IMPORTED_MODULE_2__","graphql__WEBPACK_IMPORTED_MODULE_3__","graphql__WEBPACK_IMPORTED_MODULE_4__","graphql__WEBPACK_IMPORTED_MODULE_5__","graphql__WEBPACK_IMPORTED_MODULE_6__","graphql__WEBPACK_IMPORTED_MODULE_7__","graphql__WEBPACK_IMPORTED_MODULE_8__","graphql__WEBPACK_IMPORTED_MODULE_9__","graphql__WEBPACK_IMPORTED_MODULE_10__","graphql__WEBPACK_IMPORTED_MODULE_11__","graphql__WEBPACK_IMPORTED_MODULE_12__","graphql__WEBPACK_IMPORTED_MODULE_13__","graphql__WEBPACK_IMPORTED_MODULE_14__","graphql__WEBPACK_IMPORTED_MODULE_15__","graphql__WEBPACK_IMPORTED_MODULE_16__","graphql__WEBPACK_IMPORTED_MODULE_17__","graphql__WEBPACK_IMPORTED_MODULE_18__","graphql__WEBPACK_IMPORTED_MODULE_19__","graphql__WEBPACK_IMPORTED_MODULE_20__","graphql__WEBPACK_IMPORTED_MODULE_21__","graphql__WEBPACK_IMPORTED_MODULE_22__","graphql__WEBPACK_IMPORTED_MODULE_23__","_Range_es_js__WEBPACK_IMPORTED_MODULE_25__","_onlineParser_es_js__WEBPACK_IMPORTED_MODULE_26__","__defProp","Object","defineProperty","__name","target","value","configurable","specifiedSDLRules","validateWithCustomRules","schema","ast","customRules","isRelayCompatMode","isSchemaDocument","rules","filter","rule","Array","prototype","push","apply","error","message","indexOf","nodes","node","kind","DIRECTIVE","name","SEVERITY$1","DIAGNOSTIC_SEVERITY","invariant","condition","Error","getDiagnostics","query","_a","_b","arguments","length","undefined","externalFragments","reduce","agg","range","getRange","locations","line","column","severity","source","validateQuery","validationErrorAnnotations","mapCat","annotations","deprecationWarningAnnotations","Warning","concat","array","mapper","map","type","highlightedNodes","forEach","highlightNode","variable","loc","highlightLoc","getLocation","end","start","location","queryText","parser","state","startState","lines","split","stream","i","eol","token","getStartOfToken","getCurrentPosition","SEVERITY","TYPE","GraphQL: Validation","GraphQL: Deprecation","GraphQL: Syntax","registerHelper","text","options","validationRules","from","Pos","character","to","d","onlineParser","_index_es_js__WEBPACK_IMPORTED_MODULE_0__","graphql__WEBPACK_IMPORTED_MODULE_1__","eatWhitespace","eatWhile","lexRules","parseRules","editorConfig","initialState","level","step","needsSeparator","prevState","pushRule","DOCUMENT","getToken","inBlockstring","match","skipToEnd","popRule","needsAdvance","advanceRule","sol","tabSize","indentLevel","Math","floor","indentation","lex","SpecialParseRules","backupState","assign","test","levels","slice","expected","separator","ofRule","call","update","style","unsuccessful","keys","Invalid","Comment","ruleKind","TypeError","successful","isList","isArray","kinds","CharacterStream","Position","Range","_Users_creimers_projects_graphene_graphiql_explorer_graphene_graphiql_explorer_src_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_creimers_projects_graphene_graphiql_explorer_graphene_graphiql_explorer_src_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","sourceText","_this","this","_start","_pos","_sourceText","peek","charAt","next","_char","eat","pattern","_testNextCharacter","isMatched","didEat","eatSpace","skipTo","position","consume","caseFold","RegExp","substr","startsWith","backUp","num","indent","whiteSpaces","pos","charCodeAt","current","key","_this2","containsPosition","_this3","lessThanOrEqualTo"],"mappings":"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","file":"static/js/14.eb8c3653.chunk.js","sourcesContent":["import _defineProperty from \"/Users/creimers/projects/graphene-graphiql-explorer/graphene_graphiql_explorer/src/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _DIAGNOSTIC_SEVERITY;\n\nvar __defProp = Object.defineProperty;\n\nvar __name = function __name(target, value) {\n  return __defProp(target, \"name\", {\n    value: value,\n    configurable: true\n  });\n};\n\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { Kind, specifiedRules, NoUnusedFragmentsRule, ExecutableDefinitionsRule, KnownFragmentNamesRule, validate, LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, print, parse, GraphQLError, NoDeprecatedCustomRule } from \"graphql\";\nimport \"./index.es.js\";\nimport { R as Range, P as Position, C as CharacterStream } from \"./Range.es.js\";\nimport { o as onlineParser } from \"./onlineParser.es.js\";\nimport \"react\";\nimport \"react-dom\";\nvar specifiedSDLRules = [LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule];\n\nfunction validateWithCustomRules(schema, ast, customRules, isRelayCompatMode, isSchemaDocument) {\n  var rules = specifiedRules.filter(function (rule) {\n    if (rule === NoUnusedFragmentsRule || rule === ExecutableDefinitionsRule) {\n      return false;\n    }\n\n    if (isRelayCompatMode && rule === KnownFragmentNamesRule) {\n      return false;\n    }\n\n    return true;\n  });\n\n  if (customRules) {\n    Array.prototype.push.apply(rules, customRules);\n  }\n\n  if (isSchemaDocument) {\n    Array.prototype.push.apply(rules, specifiedSDLRules);\n  }\n\n  var errors = validate(schema, ast, rules);\n  return errors.filter(function (error) {\n    if (error.message.indexOf(\"Unknown directive\") !== -1 && error.nodes) {\n      var node = error.nodes[0];\n\n      if (node && node.kind === Kind.DIRECTIVE) {\n        var name = node.name.value;\n\n        if (name === \"arguments\" || name === \"argumentDefinitions\") {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  });\n}\n\n__name(validateWithCustomRules, \"validateWithCustomRules\");\n\nvar SEVERITY$1 = {\n  Error: \"Error\",\n  Warning: \"Warning\",\n  Information: \"Information\",\n  Hint: \"Hint\"\n};\nvar DIAGNOSTIC_SEVERITY = (_DIAGNOSTIC_SEVERITY = {}, _defineProperty(_DIAGNOSTIC_SEVERITY, SEVERITY$1.Error, 1), _defineProperty(_DIAGNOSTIC_SEVERITY, SEVERITY$1.Warning, 2), _defineProperty(_DIAGNOSTIC_SEVERITY, SEVERITY$1.Information, 3), _defineProperty(_DIAGNOSTIC_SEVERITY, SEVERITY$1.Hint, 4), _DIAGNOSTIC_SEVERITY);\n\nvar invariant =\n/* @__PURE__ */\n__name(function (condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}, \"invariant\");\n\nfunction getDiagnostics(query) {\n  var schema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var customRules = arguments.length > 2 ? arguments[2] : undefined;\n  var isRelayCompatMode = arguments.length > 3 ? arguments[3] : undefined;\n  var externalFragments = arguments.length > 4 ? arguments[4] : undefined;\n\n  var _a, _b;\n\n  var ast = null;\n\n  if (externalFragments) {\n    if (typeof externalFragments === \"string\") {\n      query += \"\\n\\n\" + externalFragments;\n    } else {\n      query += \"\\n\\n\" + externalFragments.reduce(function (agg, node) {\n        agg += print(node) + \"\\n\\n\";\n        return agg;\n      }, \"\");\n    }\n  }\n\n  try {\n    ast = parse(query);\n  } catch (error) {\n    if (error instanceof GraphQLError) {\n      var range = getRange((_b = (_a = error.locations) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : {\n        line: 0,\n        column: 0\n      }, query);\n      return [{\n        severity: DIAGNOSTIC_SEVERITY.Error,\n        message: error.message,\n        source: \"GraphQL: Syntax\",\n        range: range\n      }];\n    }\n\n    throw error;\n  }\n\n  return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\n\n__name(getDiagnostics, \"getDiagnostics\");\n\nfunction validateQuery(ast) {\n  var schema = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var customRules = arguments.length > 2 ? arguments[2] : undefined;\n  var isRelayCompatMode = arguments.length > 3 ? arguments[3] : undefined;\n\n  if (!schema) {\n    return [];\n  }\n\n  var validationErrorAnnotations = mapCat(validateWithCustomRules(schema, ast, customRules, isRelayCompatMode), function (error) {\n    return annotations(error, DIAGNOSTIC_SEVERITY.Error, \"Validation\");\n  });\n  var deprecationWarningAnnotations = mapCat(validate(schema, ast, [NoDeprecatedCustomRule]), function (error) {\n    return annotations(error, DIAGNOSTIC_SEVERITY.Warning, \"Deprecation\");\n  });\n  return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\n\n__name(validateQuery, \"validateQuery\");\n\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n\n__name(mapCat, \"mapCat\");\n\nfunction annotations(error, severity, type) {\n  if (!error.nodes) {\n    return [];\n  }\n\n  var highlightedNodes = [];\n  error.nodes.forEach(function (node) {\n    var highlightNode = node.kind !== \"Variable\" && \"name\" in node && node.name !== void 0 ? node.name : \"variable\" in node && node.variable !== void 0 ? node.variable : node;\n\n    if (highlightNode) {\n      invariant(error.locations, \"GraphQL validation error requires locations.\");\n      var loc = error.locations[0];\n      var highlightLoc = getLocation(highlightNode);\n      var end = loc.column + (highlightLoc.end - highlightLoc.start);\n      highlightedNodes.push({\n        source: \"GraphQL: \".concat(type),\n        message: error.message,\n        severity: severity,\n        range: new Range(new Position(loc.line - 1, loc.column - 1), new Position(loc.line - 1, end))\n      });\n    }\n  });\n  return highlightedNodes;\n}\n\n__name(annotations, \"annotations\");\n\nfunction getRange(location, queryText) {\n  var parser = onlineParser();\n  var state = parser.startState();\n  var lines = queryText.split(\"\\n\");\n  invariant(lines.length >= location.line, \"Query text must have more lines than where the error happened\");\n  var stream = null;\n\n  for (var i = 0; i < location.line; i++) {\n    stream = new CharacterStream(lines[i]);\n\n    while (!stream.eol()) {\n      var style = parser.token(stream, state);\n\n      if (style === \"invalidchar\") {\n        break;\n      }\n    }\n  }\n\n  invariant(stream, \"Expected Parser stream to be available.\");\n  var line = location.line - 1;\n  var start = stream.getStartOfToken();\n  var end = stream.getCurrentPosition();\n  return new Range(new Position(line, start), new Position(line, end));\n}\n\n__name(getRange, \"getRange\");\n\nfunction getLocation(node) {\n  var typeCastedNode = node;\n  var location = typeCastedNode.loc;\n  invariant(location, \"Expected ASTNode to have a location.\");\n  return location;\n}\n\n__name(getLocation, \"getLocation\");\n\nvar SEVERITY = [\"error\", \"warning\", \"information\", \"hint\"];\nvar TYPE = {\n  \"GraphQL: Validation\": \"validation\",\n  \"GraphQL: Deprecation\": \"deprecation\",\n  \"GraphQL: Syntax\": \"syntax\"\n};\nCodeMirror.registerHelper(\"lint\", \"graphql\", function (text, options) {\n  var schema = options.schema;\n  var rawResults = getDiagnostics(text, schema, options.validationRules, void 0, options.externalFragments);\n  var results = rawResults.map(function (error) {\n    return {\n      message: error.message,\n      severity: error.severity ? SEVERITY[error.severity - 1] : SEVERITY[0],\n      type: error.source ? TYPE[error.source] : void 0,\n      from: CodeMirror.Pos(error.range.start.line, error.range.start.character),\n      to: CodeMirror.Pos(error.range.end.line, error.range.end.character)\n    };\n  });\n  return results;\n});","var __defProp = Object.defineProperty;\n\nvar __name = function __name(target, value) {\n  return __defProp(target, \"name\", {\n    value: value,\n    configurable: true\n  });\n};\n\nimport { i as isIgnored, L as LexRules, P as ParseRules } from \"./index.es.js\";\nimport { Kind } from \"graphql\";\n\nfunction onlineParser() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    eatWhitespace: function eatWhitespace(stream) {\n      return stream.eatWhile(isIgnored);\n    },\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: {}\n  };\n  return {\n    startState: function startState() {\n      var initialState = {\n        level: 0,\n        step: 0,\n        name: null,\n        kind: null,\n        type: null,\n        rule: null,\n        needsSeparator: false,\n        prevState: null\n      };\n      pushRule(options.parseRules, initialState, Kind.DOCUMENT);\n      return initialState;\n    },\n    token: function token(stream, state) {\n      return getToken(stream, state, options);\n    }\n  };\n}\n\n__name(onlineParser, \"onlineParser\");\n\nfunction getToken(stream, state, options) {\n  var _a;\n\n  if (state.inBlockstring) {\n    if (stream.match(/.*\"\"\"/)) {\n      state.inBlockstring = false;\n      return \"string\";\n    } else {\n      stream.skipToEnd();\n      return \"string\";\n    }\n  }\n\n  var lexRules = options.lexRules,\n      parseRules = options.parseRules,\n      eatWhitespace = options.eatWhitespace,\n      editorConfig = options.editorConfig;\n\n  if (state.rule && state.rule.length === 0) {\n    popRule(state);\n  } else if (state.needsAdvance) {\n    state.needsAdvance = false;\n    advanceRule(state, true);\n  }\n\n  if (stream.sol()) {\n    var tabSize = (editorConfig === null || editorConfig === void 0 ? void 0 : editorConfig.tabSize) || 2;\n    state.indentLevel = Math.floor(stream.indentation() / tabSize);\n  }\n\n  if (eatWhitespace(stream)) {\n    return \"ws\";\n  }\n\n  var token = lex(lexRules, stream);\n\n  if (!token) {\n    var matchedSomething = stream.match(/\\S+/);\n\n    if (!matchedSomething) {\n      stream.match(/\\s/);\n    }\n\n    pushRule(SpecialParseRules, state, \"Invalid\");\n    return \"invalidchar\";\n  }\n\n  if (token.kind === \"Comment\") {\n    pushRule(SpecialParseRules, state, \"Comment\");\n    return \"comment\";\n  }\n\n  var backupState = assign({}, state);\n\n  if (token.kind === \"Punctuation\") {\n    if (/^[{([]/.test(token.value)) {\n      if (state.indentLevel !== void 0) {\n        state.levels = (state.levels || []).concat(state.indentLevel + 1);\n      }\n    } else if (/^[})\\]]/.test(token.value)) {\n      var levels = state.levels = (state.levels || []).slice(0, -1);\n\n      if (state.indentLevel) {\n        if (levels.length > 0 && levels[levels.length - 1] < state.indentLevel) {\n          state.indentLevel = levels[levels.length - 1];\n        }\n      }\n    }\n  }\n\n  while (state.rule) {\n    var expected = typeof state.rule === \"function\" ? state.step === 0 ? state.rule(token, stream) : null : state.rule[state.step];\n\n    if (state.needsSeparator) {\n      expected = expected === null || expected === void 0 ? void 0 : expected.separator;\n    }\n\n    if (expected) {\n      if (expected.ofRule) {\n        expected = expected.ofRule;\n      }\n\n      if (typeof expected === \"string\") {\n        pushRule(parseRules, state, expected);\n        continue;\n      }\n\n      if ((_a = expected.match) === null || _a === void 0 ? void 0 : _a.call(expected, token)) {\n        if (expected.update) {\n          expected.update(state, token);\n        }\n\n        if (token.kind === \"Punctuation\") {\n          advanceRule(state, true);\n        } else {\n          state.needsAdvance = true;\n        }\n\n        return expected.style;\n      }\n    }\n\n    unsuccessful(state);\n  }\n\n  assign(state, backupState);\n  pushRule(SpecialParseRules, state, \"Invalid\");\n  return \"invalidchar\";\n}\n\n__name(getToken, \"getToken\");\n\nfunction assign(to, from) {\n  var keys = Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    to[keys[i]] = from[keys[i]];\n  }\n\n  return to;\n}\n\n__name(assign, \"assign\");\n\nvar SpecialParseRules = {\n  Invalid: [],\n  Comment: []\n};\n\nfunction pushRule(rules, state, ruleKind) {\n  if (!rules[ruleKind]) {\n    throw new TypeError(\"Unknown rule: \" + ruleKind);\n  }\n\n  state.prevState = Object.assign({}, state);\n  state.kind = ruleKind;\n  state.name = null;\n  state.type = null;\n  state.rule = rules[ruleKind];\n  state.step = 0;\n  state.needsSeparator = false;\n}\n\n__name(pushRule, \"pushRule\");\n\nfunction popRule(state) {\n  if (!state.prevState) {\n    return;\n  }\n\n  state.kind = state.prevState.kind;\n  state.name = state.prevState.name;\n  state.type = state.prevState.type;\n  state.rule = state.prevState.rule;\n  state.step = state.prevState.step;\n  state.needsSeparator = state.prevState.needsSeparator;\n  state.prevState = state.prevState.prevState;\n}\n\n__name(popRule, \"popRule\");\n\nfunction advanceRule(state, successful) {\n  var _a;\n\n  if (isList(state) && state.rule) {\n    var step = state.rule[state.step];\n\n    if (step.separator) {\n      var separator = step.separator;\n      state.needsSeparator = !state.needsSeparator;\n\n      if (!state.needsSeparator && separator.ofRule) {\n        return;\n      }\n    }\n\n    if (successful) {\n      return;\n    }\n  }\n\n  state.needsSeparator = false;\n  state.step++;\n\n  while (state.rule && !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n    popRule(state);\n\n    if (state.rule) {\n      if (isList(state)) {\n        if ((_a = state.rule) === null || _a === void 0 ? void 0 : _a[state.step].separator) {\n          state.needsSeparator = !state.needsSeparator;\n        }\n      } else {\n        state.needsSeparator = false;\n        state.step++;\n      }\n    }\n  }\n}\n\n__name(advanceRule, \"advanceRule\");\n\nfunction isList(state) {\n  var step = Array.isArray(state.rule) && typeof state.rule[state.step] !== \"string\" && state.rule[state.step];\n  return step && step.isList;\n}\n\n__name(isList, \"isList\");\n\nfunction unsuccessful(state) {\n  while (state.rule && !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n    popRule(state);\n  }\n\n  if (state.rule) {\n    advanceRule(state, false);\n  }\n}\n\n__name(unsuccessful, \"unsuccessful\");\n\nfunction lex(lexRules, stream) {\n  var kinds = Object.keys(lexRules);\n\n  for (var i = 0; i < kinds.length; i++) {\n    var match = stream.match(lexRules[kinds[i]]);\n\n    if (match && match instanceof Array) {\n      return {\n        kind: kinds[i],\n        value: match[0]\n      };\n    }\n  }\n}\n\n__name(lex, \"lex\");\n\nexport { onlineParser as o };","import _classCallCheck from \"/Users/creimers/projects/graphene-graphiql-explorer/graphene_graphiql_explorer/src/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/creimers/projects/graphene-graphiql-explorer/graphene_graphiql_explorer/src/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar __defProp = Object.defineProperty;\n\nvar __name = function __name(target, value) {\n  return __defProp(target, \"name\", {\n    value: value,\n    configurable: true\n  });\n};\n\nvar CharacterStream =\n/*#__PURE__*/\nfunction () {\n  function CharacterStream(sourceText) {\n    var _this = this;\n\n    _classCallCheck(this, CharacterStream);\n\n    this.getStartOfToken = function () {\n      return _this._start;\n    };\n\n    this.getCurrentPosition = function () {\n      return _this._pos;\n    };\n\n    this.eol = function () {\n      return _this._sourceText.length === _this._pos;\n    };\n\n    this.sol = function () {\n      return _this._pos === 0;\n    };\n\n    this.peek = function () {\n      return _this._sourceText.charAt(_this._pos) ? _this._sourceText.charAt(_this._pos) : null;\n    };\n\n    this.next = function () {\n      var _char = _this._sourceText.charAt(_this._pos);\n\n      _this._pos++;\n      return _char;\n    };\n\n    this.eat = function (pattern) {\n      var isMatched = _this._testNextCharacter(pattern);\n\n      if (isMatched) {\n        _this._start = _this._pos;\n        _this._pos++;\n        return _this._sourceText.charAt(_this._pos - 1);\n      }\n\n      return void 0;\n    };\n\n    this.eatWhile = function (match) {\n      var isMatched = _this._testNextCharacter(match);\n\n      var didEat = false;\n\n      if (isMatched) {\n        didEat = isMatched;\n        _this._start = _this._pos;\n      }\n\n      while (isMatched) {\n        _this._pos++;\n        isMatched = _this._testNextCharacter(match);\n        didEat = true;\n      }\n\n      return didEat;\n    };\n\n    this.eatSpace = function () {\n      return _this.eatWhile(/[\\s\\u00a0]/);\n    };\n\n    this.skipToEnd = function () {\n      _this._pos = _this._sourceText.length;\n    };\n\n    this.skipTo = function (position) {\n      _this._pos = position;\n    };\n\n    this.match = function (pattern) {\n      var consume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var caseFold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var token = null;\n      var match = null;\n\n      if (typeof pattern === \"string\") {\n        var regex = new RegExp(pattern, caseFold ? \"i\" : \"g\");\n        match = regex.test(_this._sourceText.substr(_this._pos, pattern.length));\n        token = pattern;\n      } else if (pattern instanceof RegExp) {\n        match = _this._sourceText.slice(_this._pos).match(pattern);\n        token = match === null || match === void 0 ? void 0 : match[0];\n      }\n\n      if (match != null) {\n        if (typeof pattern === \"string\" || match instanceof Array && _this._sourceText.startsWith(match[0], _this._pos)) {\n          if (consume) {\n            _this._start = _this._pos;\n\n            if (token && token.length) {\n              _this._pos += token.length;\n            }\n          }\n\n          return match;\n        }\n      }\n\n      return false;\n    };\n\n    this.backUp = function (num) {\n      _this._pos -= num;\n    };\n\n    this.column = function () {\n      return _this._pos;\n    };\n\n    this.indentation = function () {\n      var match = _this._sourceText.match(/\\s*/);\n\n      var indent = 0;\n\n      if (match && match.length !== 0) {\n        var whiteSpaces = match[0];\n        var pos = 0;\n\n        while (whiteSpaces.length > pos) {\n          if (whiteSpaces.charCodeAt(pos) === 9) {\n            indent += 2;\n          } else {\n            indent++;\n          }\n\n          pos++;\n        }\n      }\n\n      return indent;\n    };\n\n    this.current = function () {\n      return _this._sourceText.slice(_this._start, _this._pos);\n    };\n\n    this._start = 0;\n    this._pos = 0;\n    this._sourceText = sourceText;\n  }\n\n  _createClass(CharacterStream, [{\n    key: \"_testNextCharacter\",\n    value: function _testNextCharacter(pattern) {\n      var character = this._sourceText.charAt(this._pos);\n\n      var isMatched = false;\n\n      if (typeof pattern === \"string\") {\n        isMatched = character === pattern;\n      } else {\n        isMatched = pattern instanceof RegExp ? pattern.test(character) : pattern(character);\n      }\n\n      return isMatched;\n    }\n  }]);\n\n  return CharacterStream;\n}();\n\n__name(CharacterStream, \"CharacterStream\");\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  function Range(start, end) {\n    var _this2 = this;\n\n    _classCallCheck(this, Range);\n\n    this.containsPosition = function (position) {\n      if (_this2.start.line === position.line) {\n        return _this2.start.character <= position.character;\n      } else if (_this2.end.line === position.line) {\n        return _this2.end.character >= position.character;\n      } else {\n        return _this2.start.line <= position.line && _this2.end.line >= position.line;\n      }\n    };\n\n    this.start = start;\n    this.end = end;\n  }\n\n  _createClass(Range, [{\n    key: \"setStart\",\n    value: function setStart(line, character) {\n      this.start = new Position(line, character);\n    }\n  }, {\n    key: \"setEnd\",\n    value: function setEnd(line, character) {\n      this.end = new Position(line, character);\n    }\n  }]);\n\n  return Range;\n}();\n\n__name(Range, \"Range\");\n\nvar Position =\n/*#__PURE__*/\nfunction () {\n  function Position(line, character) {\n    var _this3 = this;\n\n    _classCallCheck(this, Position);\n\n    this.lessThanOrEqualTo = function (position) {\n      return _this3.line < position.line || _this3.line === position.line && _this3.character <= position.character;\n    };\n\n    this.line = line;\n    this.character = character;\n  }\n\n  _createClass(Position, [{\n    key: \"setLine\",\n    value: function setLine(line) {\n      this.line = line;\n    }\n  }, {\n    key: \"setCharacter\",\n    value: function setCharacter(character) {\n      this.character = character;\n    }\n  }]);\n\n  return Position;\n}();\n\n__name(Position, \"Position\");\n\nexport { CharacterStream as C, Position as P, Range as R };"],"sourceRoot":""}